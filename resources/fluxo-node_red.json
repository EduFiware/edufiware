[
    {
        "id": "4b6577ed0e14f4bc",
        "type": "tab",
        "label": "Fluxo 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8e353faac045437c",
        "type": "tab",
        "label": "Fluxo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b307c78b2e8889b6",
        "type": "ui_tab",
        "name": "Dashboard de Monitoramento",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1fcd501100c708e0",
        "type": "ui_group",
        "name": "Entradas",
        "tab": "b307c78b2e8889b6",
        "order": 1,
        "disp": true,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "205e0c7dc10f8365",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#01a5c8",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#01a5c8",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#01a5c8",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#26252b",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#18d5fe",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#01a5c8",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#26252b",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#01a5c8",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#26252b",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 50,
                "sy": 60,
                "gx": 5,
                "gy": 5,
                "cx": 10,
                "cy": 0,
                "px": 12,
                "py": 40
            }
        }
    },
    {
        "id": "fce3c81ae0df6f43",
        "type": "ui_group",
        "name": "Dados",
        "tab": "b307c78b2e8889b6",
        "order": 2,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e3d3fcb93bd6985",
        "type": "ui_group",
        "name": "Group 4",
        "tab": "b307c78b2e8889b6",
        "order": 3,
        "disp": false,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3e13888097f9c2f2",
        "type": "ui_group",
        "name": "Group 5",
        "tab": "b307c78b2e8889b6",
        "order": 4,
        "disp": false,
        "width": 5,
        "collapse": false,
        "className": ""
    },
    {
        "id": "89842ae293b6b4e1",
        "type": "ui_group",
        "name": "Dados Operadora",
        "tab": "b307c78b2e8889b6",
        "order": 5,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f90745e5d1ce2a1d",
        "type": "ui_spacer",
        "z": "8e353faac045437c",
        "name": "spacer",
        "group": "5e3d3fcb93bd6985",
        "order": 2,
        "width": 5,
        "height": 1
    },
    {
        "id": "b721b04c7be7af99",
        "type": "http in",
        "z": "4b6577ed0e14f4bc",
        "name": "",
        "url": "/notify",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "658480fb378c684d",
                "2c30d0f87cb148c8",
                "1e0ab04d11598b63"
            ]
        ]
    },
    {
        "id": "658480fb378c684d",
        "type": "json",
        "z": "4b6577ed0e14f4bc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 100,
        "wires": [
            [
                "bb3ee9f6db7fdca4"
            ]
        ]
    },
    {
        "id": "bb3ee9f6db7fdca4",
        "type": "debug",
        "z": "4b6577ed0e14f4bc",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 100,
        "wires": []
    },
    {
        "id": "2c30d0f87cb148c8",
        "type": "function",
        "z": "4b6577ed0e14f4bc",
        "name": "function 1",
        "func": "var payload = msg.payload;\nvar temperatura = payload.data[0][\"https://uri.fiware.org/ns/data-models#temperature\"].value;\nmsg.payload = temperatura;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 140,
        "wires": [
            [
                "5ea134415276f5d5",
                "706fa14875a96fd2",
                "4e388f5eec38e9ce"
            ]
        ]
    },
    {
        "id": "5ea134415276f5d5",
        "type": "debug",
        "z": "4b6577ed0e14f4bc",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 140,
        "wires": []
    },
    {
        "id": "706fa14875a96fd2",
        "type": "ui_text",
        "z": "4b6577ed0e14f4bc",
        "d": true,
        "group": "fce3c81ae0df6f43",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Temperature",
        "label": "Temperatura Atual",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 790,
        "y": 180,
        "wires": []
    },
    {
        "id": "4e388f5eec38e9ce",
        "type": "ui_gauge",
        "z": "4b6577ed0e14f4bc",
        "d": true,
        "name": "",
        "group": "fce3c81ae0df6f43",
        "order": 9,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "1e0ab04d11598b63",
        "type": "function",
        "z": "4b6577ed0e14f4bc",
        "name": "function 2",
        "func": "var payload = msg.payload;\nvar temperatura = payload.data[0].id;\nmsg.payload = temperatura;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "da06bb20becd8839"
            ]
        ]
    },
    {
        "id": "da06bb20becd8839",
        "type": "debug",
        "z": "4b6577ed0e14f4bc",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "335ca09f02a166f9",
        "type": "inject",
        "z": "8e353faac045437c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "null",
        "payloadType": "json",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "0f9847780a1bd81e"
            ]
        ]
    },
    {
        "id": "0f9847780a1bd81e",
        "type": "http request",
        "z": "8e353faac045437c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://orion:1026/ngsi-ld/v1/entities/?type=https%3A%2F%2Furi.fiware.org%2Fns%2Fdata-models%23Device",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 240,
        "y": 120,
        "wires": [
            [
                "b92225d87e02ac45"
            ]
        ]
    },
    {
        "id": "b92225d87e02ac45",
        "type": "function",
        "z": "8e353faac045437c",
        "name": "function 3",
        "func": "try {\n    // Tenta converter a string JSON em um array\n    const jsonData = JSON.parse(msg.payload);\n\n    // Verifica se jsonData é um array\n    if (Array.isArray(jsonData)) {\n        // Extrair os IDs\n        const ids = jsonData.map(item => item.id);\n        \n        // Definir a saída\n        msg.payload = ids;\n    } else {\n        // Se não for um array, retorna um erro ou uma mensagem padrão\n        msg.payload = \"Erro: A entrada não é um array.\";\n    }\n} catch (error) {\n    // Se ocorrer um erro ao analisar a string JSON\n    msg.payload = \"Erro ao analisar JSON: \" + error.message;\n}\n\n// Retornar a mensagem\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 60,
        "wires": [
            [
                "75d9f560a3c63e95",
                "4976cfc032dd9a9d"
            ]
        ]
    },
    {
        "id": "75d9f560a3c63e95",
        "type": "debug",
        "z": "8e353faac045437c",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 60,
        "wires": []
    },
    {
        "id": "4976cfc032dd9a9d",
        "type": "function",
        "z": "8e353faac045437c",
        "name": "function 4",
        "func": "msg.options = msg.payload;\n\n// Salva a quantidade de registros no contador\nmsg.count = Array.isArray(msg.payload) ? msg.payload.length : 0;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 140,
        "wires": [
            [
                "d8359fc6c9ddd508",
                "4f303fce9a2aaa4c"
            ]
        ]
    },
    {
        "id": "6162a589ef9818a2",
        "type": "debug",
        "z": "8e353faac045437c",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 280,
        "wires": []
    },
    {
        "id": "cba9393b76219b23",
        "type": "function",
        "z": "8e353faac045437c",
        "name": "function 5",
        "func": "// Monta a URL para consulta no Orion-LD\nmsg.url = `http://orion:1026/ngsi-ld/v1/entities/${msg.payload}?options=sysAttrs`;\n\n// Grava o valor do msg.payload no contexto de fluxo\nflow.set('valorAtual', msg.url);\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 220,
        "wires": [
            [
                "84836c24a7c8c398",
                "65973bd893cd7a03"
            ]
        ]
    },
    {
        "id": "84836c24a7c8c398",
        "type": "debug",
        "z": "8e353faac045437c",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "url",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "e58af9e449df2ce0",
        "type": "function",
        "z": "8e353faac045437c",
        "name": "function 6",
        "func": "let data = msg.payload;\n\n// Função para extrair apenas números de uma string\nfunction extractNumber(value) {\n    if (typeof value === \"string\") {\n        let num = value.match(/-?\\d+(\\.\\d+)?/); // Captura números inteiros ou decimais (positivos e negativos)\n        return num ? parseFloat(num[0]) : null; // Converte para número ou retorna null se não encontrar\n    }\n    return value; // Se já for numérico, retorna direto\n}\n\n// Extrai os valores do JSON retornado pelo Orion-LD\nmsg.payload = {\n    device_id: data.id.replace(\"urn:ngsi-ld:\", \"\"), // Remove o prefixo URN\n    marca: data.marca?.value || \"N/A\",  // Se não houver valor, retorna \"N/A\"\n    modelo: data.modelo?.value || \"N/A\",  // Se não houver valor, retorna \"N/A\"\n    localizacao: data.localizacao?.value?.coordinates || [0, 0], // Latitude e Longitude\n    ultimaMedicao: data.ultimaMedicao?.value || \"N/A\", // Data da última medição\n    provedorSIM: data.provedorSIM?.value || \"N/A\",\n    tipoSinal: data.tipoSinal?.value || \"N/A\",\n    intensidadeSinal: extractNumber(data.intensidadeSinal?.value || \"N/A\"),\n    acelerometro: {\n        x: extractNumber(data.acelerometro?.value?.x),  // Extrai número de x\n        y: extractNumber(data.acelerometro?.value?.y),  // Extrai número de y\n        z: extractNumber(data.acelerometro?.value?.z)   // Extrai número de z\n    },\n    giroscopio: {\n        x: extractNumber(data.giroscopio?.value?.x),  // Extrai número de x\n        y: extractNumber(data.giroscopio?.value?.y),  // Extrai número de y\n        z: extractNumber(data.giroscopio?.value?.z)   // Extrai número de z\n    },\n    barometro: data.barometro?.value || \"N/A\",\n    magnetometro: {\n        x: extractNumber(data.magnetometro?.value?.x),  // Extrai número de x\n        y: extractNumber(data.magnetometro?.value?.y),  // Extrai número de y\n        z: extractNumber(data.magnetometro?.value?.z)   // Extrai número de z\n    },\n    temperatura: extractNumber(data.temperatura?.value),  // Extrai número\n    umidade: extractNumber(data.umidade?.value),  // Extrai número\n    luzAmbiente: extractNumber(data.luzAmbiente?.value),  // Extrai número\n    passos: extractNumber(data.passos?.value),  // Extrai número\n    ruido: extractNumber(data.ruido?.value)  // Extrai número\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "f7671b475f25fbbc",
                "0fca7d91588ac499",
                "0c91363a8d872199",
                "ab963192249f3baf",
                "5d5c9147e662f62e",
                "52a4a827e4b7bc25",
                "9f482a3b2292fd9c",
                "01473431a3c4b3e6",
                "dce18c590a92ab94",
                "31212520f0d20209",
                "ec1e7ea85dc2c038",
                "d68e627f1a63f7bc",
                "5c13dfb38436fa06",
                "b7ec7f603d85abc4",
                "4e899017222b4654"
            ]
        ]
    },
    {
        "id": "f7671b475f25fbbc",
        "type": "debug",
        "z": "8e353faac045437c",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 340,
        "wires": []
    },
    {
        "id": "65973bd893cd7a03",
        "type": "http request",
        "z": "8e353faac045437c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 280,
        "wires": [
            [
                "6162a589ef9818a2",
                "e58af9e449df2ce0"
            ]
        ]
    },
    {
        "id": "ba693b881845f4fc",
        "type": "inject",
        "z": "8e353faac045437c",
        "name": "",
        "props": [
            {
                "p": "url",
                "v": "valorAtual",
                "vt": "flow"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "65973bd893cd7a03"
            ]
        ]
    },
    {
        "id": "d8359fc6c9ddd508",
        "type": "ui_dropdown",
        "z": "8e353faac045437c",
        "name": "Dispositivos",
        "label": "Dispositivos",
        "tooltip": "",
        "place": "Selecione um dispositivo",
        "group": "1fcd501100c708e0",
        "order": 1,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "msg.options",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 650,
        "y": 140,
        "wires": [
            [
                "cba9393b76219b23"
            ]
        ]
    },
    {
        "id": "0fca7d91588ac499",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "fce3c81ae0df6f43",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Marca",
        "format": "{{msg.payload.marca}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 850,
        "y": 400,
        "wires": []
    },
    {
        "id": "0c91363a8d872199",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "fce3c81ae0df6f43",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Modelo",
        "format": "{{msg.payload.modelo}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 860,
        "y": 440,
        "wires": []
    },
    {
        "id": "ab963192249f3baf",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "fce3c81ae0df6f43",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Localização",
        "format": "{{msg.payload.localizacao}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 870,
        "y": 480,
        "wires": []
    },
    {
        "id": "5d5c9147e662f62e",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "fce3c81ae0df6f43",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Passos",
        "format": "{{msg.payload.passos}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 860,
        "y": 760,
        "wires": []
    },
    {
        "id": "dce18c590a92ab94",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "fce3c81ae0df6f43",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Magnetometro",
        "format": "{{msg.payload.magnetometro}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 880,
        "y": 720,
        "wires": []
    },
    {
        "id": "31212520f0d20209",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "fce3c81ae0df6f43",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Ultima Medição",
        "format": "{{msg.payload.ultimaMedicao}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 880,
        "y": 520,
        "wires": []
    },
    {
        "id": "ec1e7ea85dc2c038",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "89842ae293b6b4e1",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Provedor SIM",
        "format": "{{msg.payload.provedorSIM}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 880,
        "y": 560,
        "wires": []
    },
    {
        "id": "d68e627f1a63f7bc",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "89842ae293b6b4e1",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Tipo sinal",
        "format": "{{msg.payload.tipoSinal}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 860,
        "y": 600,
        "wires": []
    },
    {
        "id": "5c13dfb38436fa06",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "89842ae293b6b4e1",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Intensidade sinal",
        "format": "{{msg.payload.intensidadeSinal}} dBm",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 890,
        "y": 640,
        "wires": []
    },
    {
        "id": "b7ec7f603d85abc4",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "fce3c81ae0df6f43",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Barometro",
        "format": "{{msg.payload.barometro}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "20",
        "color": "#ffffff",
        "x": 870,
        "y": 680,
        "wires": []
    },
    {
        "id": "52a4a827e4b7bc25",
        "type": "ui_gauge",
        "z": "8e353faac045437c",
        "name": "",
        "group": "3e13888097f9c2f2",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "°C",
        "format": "{{msg.payload.temperatura}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "gauge-widget",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "9f482a3b2292fd9c",
        "type": "ui_gauge",
        "z": "8e353faac045437c",
        "name": "",
        "group": "5e3d3fcb93bd6985",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Umidade",
        "label": "%",
        "format": "{{msg.payload.umidade}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "donut-widget",
        "x": 580,
        "y": 540,
        "wires": []
    },
    {
        "id": "01473431a3c4b3e6",
        "type": "ui_gauge",
        "z": "8e353faac045437c",
        "name": "",
        "group": "5e3d3fcb93bd6985",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Luz Ambiente",
        "label": "Lux",
        "format": "{{msg.payload.luzAmbiente}}",
        "min": 0,
        "max": "500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 600,
        "y": 580,
        "wires": []
    },
    {
        "id": "4e899017222b4654",
        "type": "ui_gauge",
        "z": "8e353faac045437c",
        "name": "",
        "group": "3e13888097f9c2f2",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Ruído",
        "label": "db",
        "format": "{{msg.payload.ruido}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 620,
        "wires": []
    },
    {
        "id": "4f303fce9a2aaa4c",
        "type": "ui_text",
        "z": "8e353faac045437c",
        "group": "1fcd501100c708e0",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Quantidade de Dispositivos",
        "format": "{{msg.count}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "30",
        "color": "#ffffff",
        "x": 700,
        "y": 100,
        "wires": []
    }
]
